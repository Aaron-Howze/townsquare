<?php
/**
 * FreeGeek Chicago Volunteer Profile
 *
 * Implements FreeGeek Chicago specific hour calculations.
 *
 */

include_once('freegeek_volunteer_profile.features.inc');

/**
 * Implements hook_block_info().
 */
function freegeek_volunteer_profile_block_info() {
  // A simple summation of all a volunteers hours
  $blocks['freegeek_volunteer_hours'] = array(
    'info' => t('Volunteer hours'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}

/** 
 * Implements hook_block_view().
 */
function freegeek_volunteer_profile_block_view($delta = '') {
  global $user;
  $block = array();

  switch ($delta) {
    case 'freegeek_volunteer_hours':
      if (arg(0) == 'user' && is_numeric(arg(1))) {
        $volunteer = user_load(arg(1));

        if (!(user_access('view all volunteer hours', $user) 
          || (user_access('view own volunteer hours') 
             && $user->uid == $volunteer->uid))) {
          break;
        }

        $total = 0;
        $now = date_create('now', timezone_open($volunteer->timezone));

        $query = new EntityFieldQuery;
        $query
          ->entityCondition('entity_type', 'node')
          ->propertyCondition('type', 'volunteer_session')
          ->fieldOrderBy('field_session_hours', 'value', 'DESC')
          ->fieldCondition('field_session_user', 'uid', $volunteer->uid, '=')
          ->fieldOrderBy('field_session_hours', 'value2', 'DESC');

        $result = $query->execute();
        $sessions = ($result) ? entity_load('node', array_keys($result['node'])) : array();

        $table = array(
          '#theme' => 'table',
          '#header' => array(t('Event'), t('Date'), t('Start'), t('End'), t('Hours'), t('Notes')),
          '#rows' => array(),
        );
        foreach ($sessions as $session) {
          $event = node_load($session->field_session_event['und'][0]['nid']);
          $event_type = taxonomy_term_load($event->field_event_type['und'][0]['tid']);

          $start = date_create($session->field_session_hours['und'][0]['value'],
            timezone_open($session->field_session_hours['und'][0]['timezone']));
          $end = date_create($session->field_session_hours['und'][0]['value2'],
            timezone_open($session->field_session_hours['und'][0]['timezone']));
          
          $start_timestamp = date_format($start, 'U'); 
          $end_timestamp = date_format($end, 'U'); 
          
          $elapsed = $end_timestamp - $start_timestamp;
          
          $notes = (!empty($session->field_session_notes['und'][0]['value'])) ?
            $session->field_session_notes['und'][0]['value'] : NULL;

          $table['#rows'][] = array(
            $event_type->name,
            date_format($start, 'M j Y'),
            date_format($start, 'g:ia'),
            date_format($end, 'g:ia'),
            array(
              'class' => 'hours', 
              'data' => sprintf('%01.2f', $elapsed / 3600)
            ),
            array('class' => 'notes', 'data' => $notes),
          );

          $total += $elapsed;
        }

        $recent_sessions = array();
        $recent_total = 0;
        date_modify($now, '-3 months');
        $query->fieldCondition('field_session_hours', 'value', date_format($now, 'Y-m-d H:i:s'), '>');
        $result = $query->execute();
        $recent_sessions = ($result) ? entity_load('node', array_keys($result['node'])) : $recent_sessions;
        foreach ($recent_sessions as $session) {
          $start = date_create($session->field_session_hours['und'][0]['value'],
            timezone_open($session->field_session_hours['und'][0]['timezone']));
          $end = date_create($session->field_session_hours['und'][0]['value2'],
            timezone_open($session->field_session_hours['und'][0]['timezone']));
          
          $start_timestamp = date_format($start, 'U');
          $end_timestamp = date_format($end, 'U');
          
          $elapsed = $end_timestamp - $start_timestamp;
          $recent_total += $elapsed;
        }

        $totals = array(
          '#theme' => 'table',
          '#attributes' => array('class' => 'summary'),
          '#rows' => array(
            array(
              array('header' => TRUE, 'data' => t('Past 3 months')),
              sprintf('%01.2f', $recent_total / 3600)
            ),
            array(
              array('header' => TRUE, 'data' => t('Total')),
              sprintf('%01.2f', $total / 3600)
            ),
          ),
        );


        $block['subject'] = t("@volunteer's hours", array('@volunteer' => $volunteer->name));
        $block['content'] = array(
          'totals' => $totals,
          'table' => $table,
        );
      }
  }
  return $block;
}
